import { useState, useEffect } from "react";
import { useAuth } from "@/components/auth/AuthContext"; // ‚úÖ ‡πÉ‡∏ä‡πâ useAuth() ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
import { Recipe, toggleFavoriteRecipe } from "@/lib/recipes";
import RecipeCollection from "@/components/myRecipe/RecipeCollection";
import PageHeader from "@/components/myRecipe/PageHeader";
import axios from "axios";

/**
 * My Recipes page component
 */
export default function MyRecipesPage() {
  const { user } = useAuth(); // ‚úÖ ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å Context
  const [myRecipes, setMyRecipes] = useState<Recipe[]>([]);
  const [favoriteRecipes, setFavoriteRecipes] = useState<Recipe[]>([]);
  const [loading, setLoading] = useState(true);
  const [favorites, setFavorites] = useState<number[]>([]);

  // ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏π‡∏ï‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å backend
  useEffect(() => {
    if (!user) return; // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô error ‡∏ñ‡πâ‡∏≤ user ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô

    const fetchUserRecipes = async () => {
      if (!user) return;

      const token = localStorage.getItem("authToken"); // ‚úÖ ‡πÉ‡∏ä‡πâ "authToken" ‡πÅ‡∏ó‡∏ô "token"
      if (!token || token === "null") {
        console.error("‚ùå No valid token found. Please log in again.");
        return;
      }

      setLoading(true);
      try {
        const response = await axios.get(
          `https://aroi-dee-backend.vercel.app/api/recipes/user/${user.id}`,
          {
            headers: {
              Authorization: `Bearer ${token}`, // ‚úÖ ‡πÉ‡∏ä‡πâ Token ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
            },
          }
        );

        console.log("üì¢ API Response:", response.data);
        if (!response.data.success) throw new Error(response.data.message);
        setMyRecipes(response.data.data);
      } catch (error) {
        console.error("‚ùå Error fetching user recipes:", error);
      } finally {
        setLoading(false);
      }
    };

    fetchUserRecipes();
  }, [user]); // ‚úÖ ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏°‡∏∑‡πà‡∏≠ user ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏Å‡∏î‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å/‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏π‡∏ï‡∏£‡∏≠‡∏≤‡∏´‡∏≤‡∏£
  const handleFavoriteToggle = async (recipeId: number) => {
    if (!user) {
      console.error("User not logged in");
      return;
    }

    try {
      const isCurrentlyFavorite = favorites.includes(recipeId);
      const success = await toggleFavoriteRecipe(user.id, recipeId); // ‚úÖ ‡∏™‡πà‡∏á user.id ‡πÑ‡∏õ‡∏î‡πâ‡∏ß‡∏¢

      if (success) {
        setFavorites(
          (prev) =>
            isCurrentlyFavorite
              ? prev.filter((id) => id !== recipeId) // ‡πÄ‡∏≠‡∏≤‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å Favorites
              : [...prev, recipeId] // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤ Favorites
        );

        setFavoriteRecipes(
          (prev) =>
            isCurrentlyFavorite
              ? prev.filter((recipe) => recipe.id !== recipeId) // ‡∏•‡∏ö‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£
              : [...prev, myRecipes.find((recipe) => recipe.id === recipeId)!] // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤
        );
      }
    } catch (error) {
      console.error("Error toggling favorite:", error);
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 p-6 md:p-8 lg:p-10">
      <div className="max-w-7xl mx-auto">
        <PageHeader />
        <RecipeCollection
          myRecipes={myRecipes}
          favoriteRecipes={favoriteRecipes}
          loading={loading}
          favorites={favorites}
          onFavoriteToggle={handleFavoriteToggle}
          isLoggedIn={!!user} // ‡∏™‡πà‡∏á‡∏Ñ‡πà‡∏≤ isLoggedIn ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        />
      </div>
    </div>
  );
}
