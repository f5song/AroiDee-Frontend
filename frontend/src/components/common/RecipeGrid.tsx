import React from "react";
import { Recipe, Category } from "@/lib/recipes/types";
import RecipeCard from "@/components/common/RecipeCard";
import { useFavorites } from "@/components/auth/FavoritesContext"; // ‚úÖ ‡πÉ‡∏ä‡πâ Context

interface RecipeGridProps {
  recipes: Recipe[];
  loading: boolean;
  favorites: number[]; // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Favorites
  isProcessing: Record<number, boolean>;
  onFavoriteToggle: (recipeId: number) => Promise<void>;
  isLoggedIn: boolean;
}

const RecipeGrid: React.FC<RecipeGridProps> = ({ recipes, loading }) => {
    const { favorites, isProcessing, toggleFavorite, isLoadingFavorites } = useFavorites();
  
    if (loading || isLoadingFavorites) return null; // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô UI ‡∏Å‡∏£‡∏∞‡∏û‡∏£‡∏¥‡∏ö‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡πÇ‡∏´‡∏•‡∏î
  
    if (!loading && recipes.length === 0)
      return <p className="text-center text-gray-500">üîç No recipes found!</p>;
  
    return (
    <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
      {recipes.map((recipe) => (
        <RecipeCard
          key={recipe.id}
          recipe={{
            ...recipe,
            description: recipe.description ?? "", // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô undefined
            image_url: recipe.image_url ?? "/placeholder.svg", // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏†‡∏≤‡∏û‡∏´‡∏≤‡∏¢
            cook_time: recipe.cook_time ?? 0, // ‚úÖ ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô undefined ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô 0
            categories: Array.isArray(recipe.categories)
              ? recipe.categories.map((cat) =>
                  typeof cat === "string"
                    ? { id: 0, name: cat, image_url: "" } // ‚úÖ ‡πÅ‡∏õ‡∏•‡∏á string ‡πÄ‡∏õ‡πá‡∏ô Category object
                    : (cat as Category)
                )
              : [],
          }}
          isFavorite={favorites.includes(recipe.id)} // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å database
          isProcessing={isProcessing[recipe.id] ?? false}
          onFavoriteToggle={() => toggleFavorite(recipe.id)}
        />
      ))}
    </div>
  );
};

export default RecipeGrid;
